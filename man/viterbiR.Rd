% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viterbi.R
\name{viterbiR}
\alias{viterbiR}
\title{Viterbi algorithm for Hidden Markov Models (R implementation)}
\usage{
viterbiR(emission, transition, observations)
}
\arguments{
\item{emission}{Matrix of emission probabilities (log scale).
Rows correspond to observations, columns to states.}

\item{transition}{Matrix of transition probabilities (log scale).
Element \link{i,j} is probability of transitioning from state i to state j.}

\item{observations}{Vector of observation indices (1-based)}
}
\value{
Vector of most likely hidden states (0-based indexing)
}
\description{
R implementation of the Viterbi algorithm for finding the most likely
sequence of hidden states in a Hidden Markov Model.
}
\details{
This is the R implementation of the Viterbi algorithm. For better performance,
use the C++ implementation via the \code{viterbi} function (from RcppExports).
The algorithm uses dynamic programming to find the most probable path through
the hidden states given the observed data.
}
\examples{
# Simple 2-state HMM example
# States: 0 (low), 1 (high)
emission <- matrix(c(-1, -3, -3, -1), nrow = 2, ncol = 2)  # log probs
transition <- matrix(c(-0.1, -2.3, -2.3, -0.1), nrow = 2, ncol = 2)  # log probs
observations <- c(1, 1, 2, 2, 1)

states <- viterbiR(emission, transition, observations)

}
\seealso{
\code{\link{viterbi}} for the C++ implementation
}
